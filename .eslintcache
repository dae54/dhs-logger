[{"/home/dae54/Projects/WORK/fypdash/src/index.js":"1","/home/dae54/Projects/WORK/fypdash/src/App.jsx":"2","/home/dae54/Projects/WORK/fypdash/src/Context/AuthContext.jsx":"3","/home/dae54/Projects/WORK/fypdash/src/components/routes.jsx":"4","/home/dae54/Projects/WORK/fypdash/src/components/RouteWrapper.jsx":"5","/home/dae54/Projects/WORK/fypdash/src/utilities/location.js":"6","/home/dae54/Projects/WORK/fypdash/src/components/ShowForRole.jsx":"7","/home/dae54/Projects/WORK/fypdash/src/components/Sidebar/index.jsx":"8","/home/dae54/Projects/WORK/fypdash/src/components/Navbar/index.jsx":"9","/home/dae54/Projects/WORK/fypdash/src/components/ErrorBoundary.jsx":"10","/home/dae54/Projects/WORK/fypdash/src/env.js":"11","/home/dae54/Projects/WORK/fypdash/src/components/Navbar/Navbar.jsx":"12","/home/dae54/Projects/WORK/fypdash/src/components/Navbar/BreadCrumb.jsx":"13","/home/dae54/Projects/WORK/fypdash/src/pages/index.jsx":"14","/home/dae54/Projects/WORK/fypdash/src/pages/Dashboard/index.jsx":"15","/home/dae54/Projects/WORK/fypdash/src/api/loggerAPI.js":"16","/home/dae54/Projects/WORK/fypdash/src/api/axiosConfig.js":"17","/home/dae54/Projects/WORK/fypdash/src/api/resolve.js":"18","/home/dae54/Projects/WORK/fypdash/src/pages/Data/index.jsx":"19","/home/dae54/Projects/WORK/fypdash/src/pages/Teams/index.jsx":"20","/home/dae54/Projects/WORK/fypdash/src/pages/Data/NewCluster.jsx":"21","/home/dae54/Projects/WORK/fypdash/src/pages/Authentication/session.jsx":"22","/home/dae54/Projects/WORK/fypdash/src/services/decodeLocation.js":"23","/home/dae54/Projects/WORK/fypdash/src/components/ToastAlert.jsx":"24","/home/dae54/Projects/WORK/fypdash/src/pages/Teams/NewTeam.jsx":"25","/home/dae54/Projects/WORK/fypdash/src/api/teamsAPI.js":"26","/home/dae54/Projects/WORK/fypdash/src/pages/Enumerators/index.jsx":"27","/home/dae54/Projects/WORK/fypdash/src/pages/Enumerators/NewEnumerator.jsx":"28","/home/dae54/Projects/WORK/fypdash/src/api/enumeratorAPI.js":"29","/home/dae54/Projects/WORK/fypdash/src/pages/Dashboard/teamDetails.jsx":"30","/home/dae54/Projects/WORK/fypdash/src/api/authAPI.js":"31","/home/dae54/Projects/WORK/fypdash/src/pages/Authentication/login.jsx":"32","/home/dae54/Projects/WORK/fypdash/src/pages/User/index.jsx":"33","/home/dae54/Projects/WORK/fypdash/src/pages/User/newUser.jsx":"34"},{"size":197,"mtime":1631609124965,"results":"35","hashOfConfig":"36"},{"size":1620,"mtime":1632091343632,"results":"37","hashOfConfig":"36"},{"size":5690,"mtime":1632092969394,"results":"38","hashOfConfig":"36"},{"size":2440,"mtime":1632092648076,"results":"39","hashOfConfig":"36"},{"size":530,"mtime":1632091936266,"results":"40","hashOfConfig":"36"},{"size":830,"mtime":1631609124965,"results":"41","hashOfConfig":"36"},{"size":423,"mtime":1631609124965,"results":"42","hashOfConfig":"36"},{"size":3302,"mtime":1632092565224,"results":"43","hashOfConfig":"36"},{"size":52,"mtime":1631609124965,"results":"44","hashOfConfig":"36"},{"size":774,"mtime":1631609124961,"results":"45","hashOfConfig":"36"},{"size":98,"mtime":1631609124965,"results":"46","hashOfConfig":"36"},{"size":15525,"mtime":1632091222985,"results":"47","hashOfConfig":"36"},{"size":1885,"mtime":1631609124965,"results":"48","hashOfConfig":"36"},{"size":1243,"mtime":1631610497518,"results":"49","hashOfConfig":"36"},{"size":7915,"mtime":1632087595381,"results":"50","hashOfConfig":"36"},{"size":1555,"mtime":1632045355467,"results":"51","hashOfConfig":"36"},{"size":461,"mtime":1631622920487,"results":"52","hashOfConfig":"36"},{"size":301,"mtime":1631621616394,"results":"53","hashOfConfig":"36"},{"size":6024,"mtime":1632054760268,"results":"54","hashOfConfig":"36"},{"size":4645,"mtime":1631876386579,"results":"55","hashOfConfig":"36"},{"size":10956,"mtime":1632055032057,"results":"56","hashOfConfig":"36"},{"size":475,"mtime":1632092487207,"results":"57","hashOfConfig":"36"},{"size":876,"mtime":1631773753829,"results":"58","hashOfConfig":"36"},{"size":498,"mtime":1631803054347,"results":"59","hashOfConfig":"36"},{"size":5473,"mtime":1631963160391,"results":"60","hashOfConfig":"36"},{"size":1075,"mtime":1631845523495,"results":"61","hashOfConfig":"36"},{"size":3999,"mtime":1631966651493,"results":"62","hashOfConfig":"36"},{"size":4164,"mtime":1631961989175,"results":"63","hashOfConfig":"36"},{"size":1099,"mtime":1631855388947,"results":"64","hashOfConfig":"36"},{"size":7704,"mtime":1632079968141,"results":"65","hashOfConfig":"36"},{"size":1282,"mtime":1632093954702,"results":"66","hashOfConfig":"36"},{"size":5067,"mtime":1632092473539,"results":"67","hashOfConfig":"36"},{"size":3881,"mtime":1632094408836,"results":"68","hashOfConfig":"36"},{"size":3507,"mtime":1632093975999,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"a1plom",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dae54/Projects/WORK/fypdash/src/index.js",[],["146","147"],"/home/dae54/Projects/WORK/fypdash/src/App.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/Context/AuthContext.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/components/routes.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/components/RouteWrapper.jsx",["148"],"/home/dae54/Projects/WORK/fypdash/src/utilities/location.js",[],"/home/dae54/Projects/WORK/fypdash/src/components/ShowForRole.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/components/Sidebar/index.jsx",["149"],"/home/dae54/Projects/WORK/fypdash/src/components/Navbar/index.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/components/ErrorBoundary.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/env.js",[],"/home/dae54/Projects/WORK/fypdash/src/components/Navbar/Navbar.jsx",["150","151"],"/home/dae54/Projects/WORK/fypdash/src/components/Navbar/BreadCrumb.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/pages/index.jsx",["152"],"import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport routes from '../components/routes'\nimport RouteWrapper from '../components/RouteWrapper'\n// import NotFound from './Errors/NotFound'\nimport Sidebar from '../components/Sidebar'\nimport Navbar from '../components/Navbar'\n// import Footer from '../components/Footer'\n// import { CronJob } from 'cron'\n\nexport default function Main() {\n\n    return (\n        <div>\n            <Sidebar />\n            <div className=\"main-content\" id=\"panel\">\n                <Navbar />\n                <Switch>\n                    {routes.map(route =>\n                        <RouteWrapper\n                            exact\n                            path={route.url}\n                            component={route.component}\n                            roles={route.roles}\n                            key={route.url} />\n                    )}\n                    {/* <Route component={NotFound} /> */}\n                </Switch>\n                {/* {routes.map((item, index) => {\n                    return (<Route exact path={item.link} key={index} component={item.component} />)\n                })} */}\n                {/* <Footer /> */}\n            </div>\n\n\n        </div>\n    )\n}","/home/dae54/Projects/WORK/fypdash/src/pages/Dashboard/index.jsx",["153"],"/home/dae54/Projects/WORK/fypdash/src/api/loggerAPI.js",["154"],"/home/dae54/Projects/WORK/fypdash/src/api/axiosConfig.js",[],"/home/dae54/Projects/WORK/fypdash/src/api/resolve.js",[],"/home/dae54/Projects/WORK/fypdash/src/pages/Data/index.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/pages/Teams/index.jsx",["155"],"import React, { useEffect, useState } from 'react'\nimport * as TeamsAPI from '../../api/teamsAPI'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\nimport NewTeam from './NewTeam'\n\nexport default function Teams() {\n    const [logData, setLogData] = useState([])\n    const [status, setStatus] = useState({ code: 1, message: '' })\n    const [modalVisible, setModalVisible] = useState(false)\n\n    async function fetchAll() {\n        setStatus({ code: 0, message: '' })\n        await TeamsAPI.getAll()\n            .then(data => {\n                console.log(data)\n                setLogData(data)\n                setStatus({ code: 1, message: '' })\n\n            }).catch(error => {\n                setStatus({ code: 2, message: error.message })\n            })\n    }\n\n    useEffect(() => {\n        fetchAll()\n        return () => {\n            // setLogData()\n            // setStatus()\n        }\n    }, [])\n\n    function renderFullName(names) {\n        return `${names.firstName} ${names.middleName} ${names.lastName}`\n    }\n\n    return (\n        <div className=\"container-fluid mt-3\">\n            <div className=\"d-flex justify-content-end\">\n                <NewTeam updateTeams={setLogData} show={modalVisible} setShow={setModalVisible} />\n                <div className=\"btn btn-neutral mb-2 px-6\" onClick={() => setModalVisible(true)}>New Entry</div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"card\">\n                        <MaterialTable\n                            data={logData}\n                            totalCount\n                            editable={{\n                                onRowUpdate: async (newData, oldData) => {\n                                    await TeamsAPI.updateOne(newData).then(res => {\n                                        const dataUpdate = [...logData];\n                                        const index = oldData.tableData.id;\n                                        dataUpdate[index] = newData;\n                                        setLogData([...dataUpdate]);\n                                    }).catch(error => {\n                                        console.error(error)\n                                    })\n                                },\n                                onRowDelete: async oldData => {\n                                    console.log('delete')\n                                    await TeamsAPI.deleteOne(oldData._id)\n                                        .then(res => {\n                                            const dataDelete = [...logData];\n                                            const index = oldData.tableData.id;\n                                            dataDelete.splice(index, 1);\n                                            setLogData([...dataDelete]);\n                                        }).catch(error => {\n                                            console.error(error)\n                                        })\n                                },\n                            }}\n                            isLoading={status.code === 0}\n                            title='Registered Teams'\n                            columns={[\n                                { title: 'Team Number', field: 'teamNumber' },\n                                { title: 'Supervisor', field: 'cluster', render: (data) => renderFullName(data.supervisor) },\n                                { title: 'Member 1', field: 'member', render: (data) => renderFullName(data.members[0].memberId) },\n                                { title: 'Member 2', field: 'member', render: (data) => renderFullName(data.members[1].memberId) },\n                                // { title: 'Listed Households', field: 'listedHouseholds', },\n                                // { title: 'Survey Date', field: 'surveyDate', render: (data) => `${moment(data.surveyDate).fromNow()} (${moment(data.surveyDate).format('DD MMM')})` },\n                                // { title: 'altitude', field: 'decodedGPS', render: (data) => data.decodedGPS.region },\n                                // { title: 'Region', field: 'decodedGPS', render: (data) => data.decodedGPS.region },\n                                // { title: 'Registered At', field: 'createdAt', render: (data) => moment(data.createdAt).fromNow() },\n                                // { title: 'surveyDate', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\n                            ]}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/dae54/Projects/WORK/fypdash/src/pages/Data/NewCluster.jsx",["156","157","158","159","160"],"/home/dae54/Projects/WORK/fypdash/src/pages/Authentication/session.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/services/decodeLocation.js",[],"/home/dae54/Projects/WORK/fypdash/src/components/ToastAlert.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/pages/Teams/NewTeam.jsx",["161","162"],"import React, { useEffect, useRef, useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport * as TeamsAPI from '../../api/teamsAPI'\nimport * as EnumerartorAPI from '../../api/enumeratorAPI'\n\n\nexport default function NewTeam({ show, setShow, updateTeams }) {\n    function handleClose() {\n        setShow(false)\n    }\n\n    const [loading, setLoading] = useState(false)\n    // code defn\n    /**\n     * 0 loading\n     * 1 success\n     * 2 error\n     */\n    const [status, setStatus] = useState({ code: 1, message: '' })\n    const [enumerators, setEnumerators] = useState([])\n\n\n    const teamNumberRef = useRef()\n    const supervisorRef = useRef()\n    const member1Ref = useRef()\n    const member2Ref = useRef()\n\n    const formRef = useRef()\n\n\n\n\n\n\n    async function addRecord(e) {\n        e.preventDefault()\n        const payload = {\n            supervisor: supervisorRef.current.value,\n            members: [\n                member1Ref.current.value,\n                member2Ref.current.value\n            ],\n            teamNumber: teamNumberRef.current.value\n        }\n        setStatus({ code: 0, message: '' })\n\n        await TeamsAPI.create(payload).then(data => {\n            formRef.current.reset()\n            setStatus({ code: 1, message: 'Successfully Added' })\n            updateTeams(teams => [data].concat(teams))\n        }).catch(error => {\n            console.log(error)\n            setStatus({ code: 2, message: error.message })\n        })\n    }\n\n    async function getEnumerators() {\n        setLoading(true)\n        await EnumerartorAPI.getAll()\n            .then(enums => {\n                console.log('enums', enums)\n                setEnumerators(enums)\n            }).catch(error => {\n                console.log(error)\n            }).finally(() => {\n                setLoading(false)\n            })\n    }\n\n    useEffect(() => {\n        getEnumerators()\n    }, [])\n\n    function renderFullName(names) {\n        return `${names.firstName} ${names.middleName} ${names.lastName}`\n    }\n\n    return (\n        <Modal\n            show={show}\n            size=\"xl\"\n            onHide={handleClose}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <h3 className='text-uppercase'>Team Information</h3>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={addRecord} className='' ref={formRef}>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                            <label >Team Number:</label>\n                            <input type=\"number\" ref={teamNumberRef} class=\"form-control\" />\n                        </div>\n                        <h4 className='form-group col-md-12 my-1'>Team Members</h4>\n                        <div className='form-group col-md-4'>\n                            <label >Member 1:</label>\n                            <select className='form-control' ref={member1Ref}>\n                                <option value={0}>Select Enumerator </option>\n                                {enumerators.map(enumerator => {\n                                    return (\n                                        <option value={enumerator._id}>{renderFullName(enumerator)}</option>\n                                    )\n                                })}\n                            </select>\n                        </div>\n                        <div className='form-group col-md-4'>\n                            <label >Member 2:</label>\n                            <select className='form-control' ref={member2Ref}>\n                                <option value={0}>Select Enumerator </option>\n                                {enumerators.map(enumerator => {\n                                    return (\n                                        <option value={enumerator._id}>{renderFullName(enumerator)}</option>\n                                    )\n                                })}\n                            </select>\n                        </div>\n                        <div className='form-group col-md-4'>\n                            <label >Supervisor:</label>\n                            <select className='form-control' ref={supervisorRef}>\n                                <option value={0}>Select Enumerator </option>\n                                {enumerators.map(enumerator => {\n                                    return (\n                                        <option value={enumerator._id}>{renderFullName(enumerator)}</option>\n                                    )\n                                })}\n                            </select>\n                        </div>\n                    </div>\n                    {status.message &&\n                        <div className='alert alert-warning text-center'>{status.message}</div>\n                    }\n                    <button className='float-right btn btn-default px-5' type=\"submit\">\n                        Save\n                        {status.code === 0 &&\n                            <span className='spinner-border spinner-border-sm'></span>\n                        }\n                    </button>\n                    <button className='float-right btn btn-neutral px-5 mr-3' type='reset'>Clear Input</button>\n                </form>\n            </Modal.Body>\n        </Modal>\n    )\n}","/home/dae54/Projects/WORK/fypdash/src/api/teamsAPI.js",["163"],"import axios from './axiosConfig';\n\nimport { parseError, parseResponse, resolve } from './resolve.js';\n\nexport async function create(payload) {\n    return await axios.post('/team', payload)\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\nexport async function updateOne(payload) {\n    return await axios.patch('/team', payload)\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\nexport async function getAll() {\n    return await axios.get('/team')\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\nexport async function deleteOne(clusterId) {\n    return await axios.delete(`/team/${clusterId}`)\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\n// export async function signOut() {\n//     return await axios.post('/users/signOut')\n//         .then(response => parseResponse(response))\n//         .catch(error => { throw parseError(error) })\n// }\n","/home/dae54/Projects/WORK/fypdash/src/pages/Enumerators/index.jsx",["164","165"],"import React, { useEffect, useState } from 'react'\nimport * as EnumeratorAPI from '../../api/enumeratorAPI'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\nimport NewEnumerator from './NewEnumerator'\n\nexport default function Enumerators() {\n    const [enumerators, setEnumerators] = useState([])\n    const [status, setStatus] = useState({ code: 1, message: '' })\n    const [modalVisible, setModalVisible] = useState(false)\n\n    async function fetchAll() {\n        setStatus({ code: 0, message: '' })\n        await EnumeratorAPI.getAll()\n            .then(data => {\n                console.log(data)\n                setEnumerators(data)\n                setStatus({ code: 1, message: '' })\n\n            }).catch(error => {\n                setStatus({ code: 2, message: error.message })\n            })\n    }\n\n    useEffect(() => {\n        fetchAll()\n        return () => {\n            // setLogData()\n            // setStatus()\n        }\n    }, [])\n\n    return (\n        <div className=\"container-fluid mt-3\">\n            <div className=\"d-flex justify-content-end\">\n                <NewEnumerator setEnumerators={setEnumerators} show={modalVisible} setShow={setModalVisible} />\n                <div className=\"btn btn-neutral mb-2 px-6\" onClick={() => setModalVisible(true)}>New Entry</div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"card rounded\">\n                        <MaterialTable\n                            data={enumerators}\n                            totalCount\n                            editable={{\n                                onRowUpdate: async (newData, oldData) => {\n                                    await EnumeratorAPI.updateOne(newData).then(res => {\n                                        const dataUpdate = [...enumerators];\n                                        const index = oldData.tableData.id;\n                                        dataUpdate[index] = newData;\n                                        setEnumerators([...dataUpdate]);\n                                    }).catch(error => {\n                                        console.error(error)\n                                    })\n                                },\n                                onRowDelete: async oldData => {\n                                    console.log('delete')\n                                    await EnumeratorAPI.deleteOne(oldData._id)\n                                        .then(res => {\n                                            const dataDelete = [...enumerators];\n                                            const index = oldData.tableData.id;\n                                            dataDelete.splice(index, 1);\n                                            setEnumerators([...dataDelete]);\n                                        }).catch(error => {\n                                            console.error(error)\n                                        })\n                                },\n                            }}\n                            isLoading={status.code === 0}\n                            title='Registered Enumerators'\n                            columns={[\n                                {\n                                    title: 'Full Name', render: (data) => `${data.firstName} ${data.middleName} ${data.lastName}`,\n                                    customFilterAndSearch: (term, rowData) => {\n                                        return (`${rowData.firstName} ${rowData.middleName} ${rowData.lastName}`).indexOf(term) != -1\n                                    }\n                                },\n                                { title: 'Phone Number', field: 'phoneNumber', emptyValue: 'no val' },\n                                { title: 'Role', field: 'role', },\n                            ]}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/dae54/Projects/WORK/fypdash/src/pages/Enumerators/NewEnumerator.jsx",["166"],"import React, { useRef, useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport * as EnumeratorAPI from '../../api/enumeratorAPI'\n\n\nexport default function NewTeam({ show, setShow, setEnumerators }) {\n    function handleClose() {\n        setShow(false)\n    }\n\n    // const [showToast, setShowToast] = useState(false)\n    // const [loading, setLoading] = useState(false)\n    // code defn\n    /**\n     * 0 loading\n     * 1 success\n     * 2 error\n     */\n    const [status, setStatus] = useState({ code: 1, message: '' })\n\n    const firstNameRef = useRef()\n    const lastNameRef = useRef()\n    const middleNameRef = useRef()\n    const phoneNumberRef = useRef()\n    const formRef = useRef()\n    const roleRef = useRef()\n\n    async function addRecord(e) {\n        e.preventDefault()\n        const payload = {\n            firstName: firstNameRef.current.value,\n            middleName: middleNameRef.current.value,\n            lastName: lastNameRef.current.value,\n            phoneNumber: phoneNumberRef.current.value,\n            role: roleRef.current.value\n        }\n        console.log(payload)\n        setStatus({ code: 0, message: '' })\n\n        await EnumeratorAPI.create(payload).then(data => {\n            console.log(data)\n            setEnumerators(enumerators => [data].concat(enumerators))\n            setStatus({ code: 1, message: 'Successfully Added' })\n            formRef.current.reset()\n            firstNameRef.current.focus()\n        }).catch(error => {\n            console.log(error)\n            setStatus({ code: 2, message: error.message })\n        })\n    }\n\n    return (\n        <Modal\n            show={show}\n            size=\"xl\"\n            onHide={handleClose}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <h3 className='text-uppercase'>New Enumerator</h3>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={addRecord} ref={formRef} className=''>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label >First Name:</label>\n                            <input type=\"text\" ref={firstNameRef} class=\"form-control\" />\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label >Middle Name:</label>\n                            <input type=\"text\" ref={middleNameRef} class=\"form-control\" />\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label >Last Name:</label>\n                            <input type=\"text\" ref={lastNameRef} class=\"form-control\" />\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label>Phone Number:</label>\n                            <input type=\"number\" ref={phoneNumberRef} class=\"form-control\" />\n                        </div>\n                        <div className='form-group col-md-4'>\n                            <label >Role:</label>\n                            <select className='form-control' ref={roleRef}>\n                                <option value='member'>Member</option>\n                                <option value='supervisor'>Supervisor</option>\n                            </select>\n                        </div>\n                    </div>\n                    {status.message &&\n                        <div className='alert alert-warning text-center'>{status.message}</div>\n                    }\n                    <button className='float-right btn btn-default px-5' type=\"submit\">\n                        Save\n                        {status.code === 0 &&\n                            <span className='spinner-border spinner-border-sm'></span>\n                        }\n                    </button>\n                    <button className='float-right btn btn-neutral px-5 mr-3' type='reset'>Clear Input</button>\n                </form>\n            </Modal.Body>\n        </Modal>\n    )\n}","/home/dae54/Projects/WORK/fypdash/src/api/enumeratorAPI.js",["167"],"import axios from './axiosConfig';\n\nimport { parseError, parseResponse, resolve } from './resolve.js';\n\nexport async function create(payload) {\n    return await axios.post('/enumerator', payload)\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\nexport async function updateOne(payload) {\n    return await axios.patch('/enumerator', payload)\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\nexport async function getAll() {\n    return await axios.get('/enumerator')\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\nexport async function deleteOne(clusterId) {\n    return await axios.delete(`/enumerator/${clusterId}`)\n        .then(response => parseResponse(response))\n        .catch(error => { throw parseError(error) })\n}\n\n// export async function signOut() {\n//     return await axios.post('/users/signOut')\n//         .then(response => parseResponse(response))\n//         .catch(error => { throw parseError(error) })\n// }\n","/home/dae54/Projects/WORK/fypdash/src/pages/Dashboard/teamDetails.jsx",["168","169","170"],"/home/dae54/Projects/WORK/fypdash/src/api/authAPI.js",["171"],"/home/dae54/Projects/WORK/fypdash/src/pages/Authentication/login.jsx",[],"/home/dae54/Projects/WORK/fypdash/src/pages/User/index.jsx",["172"],"/home/dae54/Projects/WORK/fypdash/src/pages/User/newUser.jsx",["173","174"],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":8,"column":13,"nodeType":"181","messageId":"182","endLine":8,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":10,"column":13,"nodeType":"181","messageId":"182","endLine":10,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":9,"column":13,"nodeType":"181","messageId":"182","endLine":9,"endColumn":18},{"ruleId":"179","severity":1,"message":"183","line":12,"column":9,"nodeType":"181","messageId":"182","endLine":12,"endColumn":27},{"ruleId":"179","severity":1,"message":"184","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":15},{"ruleId":"179","severity":1,"message":"185","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"186","line":3,"column":37,"nodeType":"181","messageId":"182","endLine":3,"endColumn":44},{"ruleId":"179","severity":1,"message":"187","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"188","line":2,"column":17,"nodeType":"181","messageId":"182","endLine":2,"endColumn":23},{"ruleId":"179","severity":1,"message":"189","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":22},{"ruleId":"179","severity":1,"message":"190","line":15,"column":12,"nodeType":"181","messageId":"182","endLine":15,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":116,"column":13,"nodeType":"193","messageId":"194","endLine":116,"endColumn":33},{"ruleId":"195","severity":1,"message":"196","line":202,"column":25,"nodeType":"197","endLine":202,"endColumn":62},{"ruleId":"179","severity":1,"message":"190","line":12,"column":12,"nodeType":"181","messageId":"182","endLine":12,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":83,"column":13,"nodeType":"193","messageId":"194","endLine":83,"endColumn":33},{"ruleId":"179","severity":1,"message":"186","line":3,"column":37,"nodeType":"181","messageId":"182","endLine":3,"endColumn":44},{"ruleId":"179","severity":1,"message":"187","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":76,"column":129,"nodeType":"200","messageId":"201","endLine":76,"endColumn":131},{"ruleId":"191","severity":1,"message":"192","line":57,"column":13,"nodeType":"193","messageId":"194","endLine":57,"endColumn":33},{"ruleId":"179","severity":1,"message":"186","line":3,"column":37,"nodeType":"181","messageId":"182","endLine":3,"endColumn":44},{"ruleId":"179","severity":1,"message":"202","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":34},{"ruleId":"179","severity":1,"message":"185","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":69,"column":8,"nodeType":"205","endLine":69,"endColumn":30,"suggestions":"206"},{"ruleId":"179","severity":1,"message":"186","line":3,"column":37,"nodeType":"181","messageId":"182","endLine":3,"endColumn":44},{"ruleId":"179","severity":1,"message":"187","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"207","line":1,"column":35,"nodeType":"181","messageId":"182","endLine":1,"endColumn":44},{"ruleId":"191","severity":1,"message":"192","line":53,"column":13,"nodeType":"193","messageId":"194","endLine":53,"endColumn":33},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'setIsAuthenticated' is assigned a value but never used.","'Route' is defined but never used.","'Bar' is defined but never used.","'resolve' is defined but never used.","'moment' is defined but never used.","'Button' is defined but never used.","'decodeLocation' is defined but never used.","'loading' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTeamClusterInfo'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [to, from, activeTeam, getTeamClusterInfo]",{"range":"213","text":"214"},[2072,2094],"[to, from, activeTeam, getTeamClusterInfo]"]